/**
 * @param {number} n
 * @return {number[][]}
 */
var generateMatrix = function(n) {

    let matrix = new Array(n).fill(0).map(() => new Array(n).fill(0));
    let top = 0;
    let bottom = n - 1;
    let left = 0;
    let right = n - 1;
    let num = 1;
    
    while (num <= n * n) {
        for (let i = left; i <= right; i++) {
            matrix[top][i] = num++;
        }
        top++;
        for (let i = top; i <= bottom; i++) {
            matrix[i][right] = num++;
        }
        right--;
        for (let i = right; i >= left; i--) {
            matrix[bottom][i] = num++;
        }
        bottom--;
        for (let i = bottom; i >= top; i--) {
            matrix[i][left] = num++;
        }
        left++;
    }
    
    return matrix;
    
};

// Testing the function
console.log(generateMatrix(3));
// Output [[1,2,3],[8,9,4],[7,6,5]]
console.log(generateMatrix(1));
// Output [[1]]
console.log(generateMatrix(4));
// Output [[1,2,3,4],[12,13,14,5],[11,16,15,6],[10,9,8,7]]
console.log(generateMatrix(5));
// Output [[1,2,3,4,5],[16,17,18,19,6],[15,24,25,20,7],[14,23,22,21,8],[13,12,11,10,9]]
console.log(generateMatrix(6));
// Output [[1,2,3,4,5,6],[20,21,22,23,24,7],[19,32,33,34,25,8],[18,31,36,35,26,9],[17,30,29,28,27,10],[16,15,14,13,12,11]]
console.log(generateMatrix(7));
// Output [[1,2,3,4,5,6,7],[24,25,26,27,28,29,8],[23,40,41,42,43,30,9],[22,39,48,49,44,31,10],[21,38,47,46,45,32,11],[20,37,36,35,34,33,12],[19,18,17,16,15,14,13]]
console.log(generateMatrix(8));
// Output [[1,2,3,4,5,6,7,8],[28,29,30,31,32,33,34,9],[27,48,49,50,51,52,35,10],[26,47,60,61,62,53,36,11],[25,46,59,64,63,54,37,12],[24,45,58,57,56,55,38,13],[23,44,43,42,41,40,39,14],[22,21,20,19,18,17,16,15]]
console.log(generateMatrix(9));
// Output [[1,2,3,4,5,6,7,8,9],[32,33,34,35,36,37,38,39,10],[31,56,57,58,59,60,61,40,11],[30,55,72,73,74,75,62,41,12],[29,54,71,80,81,76,63,42,13],[28,53,70,79,78,77,64,43,14],[27,52,69,68,67,66,65,44,15],[26,51,50,49,48,47,46,45,16],[25,24,23,22,21,20,19,18,17]]
console.log(generateMatrix(10));
// Output [[1,2,3,4,5,6,7,8,9,10],[36,37,38,39,40,41,42,43,44,11],[35,64,65,66,67,68,69,70,45,12],[34,63,84,85,86,87,88,71,46,13],[33,62,83,96,97,98,89,72,47,14],[32,61,82,95,100,99,90,73,48,15],[31,60,81,94,93,92,91,74,49,16],[30,59,80,79,78,77,76,75,50,17],[29,58,57,56,55,54,53,52,51,18],[28,27,26,25,24,23,22,21,20,19]]
console.log(generateMatrix(11));
// Output [[1,2,3,4,5,6,7,8,9,10,11],[40,41,42,43,44,45,46,47,48,49,12],[39,72,73,74,75,76,77,78,79,50,13],[38,71,100,101,102,103,104,105,80,51,14],[37,70,99,120,121,122,123,106,81,52,15],[36,69,98,119,132,133,124,107,82,53,16],[35,68,97,118,131,136,125,108,83,54,17],[34,67,96,117,130,135,134,109,84,55,18],[33,66,95,116,115,114,113,110,85,56,19],[32,65,94,93,92,91,90,89,88,87,86],[31,64,63,62,61,60,59,58,57,56,55],[30,29,28,27,26,25,24,23,22,21,20]]
console.log(generateMatrix(12));
// Output [[1,2,3,4,5,6,7,8,9,10,11,12],[44,45,46,47,48,49,50,51,52,53,54,13],[43,80,81,82,83,84,85,86,87,88,55,14],[42,79,120,121,122,123,124,125,126,89,56,15],[41,78,119,144,145,146,147,148,127,90,57,16],[40,77,118,143,160,161,162,149,128,91,58,17],[39,76,117,142,159,168,163,150,129,92,59,18],[38,75,116,141,158,167,166,151,130,93,60,19],[37,74,115,140,157,156,155,152,131,94,61,20],[36,73,114,139,138,137,136,135,132,95,62,21],[35,72,113,112,111,110,109,108,107,106,105,96],[34,71,70,69,68,67,66,65,64,63,62,61],[33,32,31,30,29,28,27,26,25,24,23,22]]
console.log(generateMatrix(13));
// Output [[1,2,3,4,5,6,7,8,9,10,11,12,13],[48,49,50,51,52,53,54,55,56,57,58,59,14],[47,96,97,98,99,100,101,102,103,104,105,60,15],[46,95,148,149,150,151,152,153,154,155,106,61,16],[45,94,147,196,197,198,199,200,201,156,107,62,17],[44,93,146,195,240,241,242,243,202,157,108,63,18],[43,92,145,194,239,276,277,244,203,158,109,64,19],[42,91,144,193,238,275,288,278,245,204,159,110,65,20],[41,90,143,192,237,274,287,292,279,246,205,160,111,21],[40,89,142,191,236,273,286,291,280,247,206,161,112,22],[39,88,141,190,235,272,285,284,283,248,207,162,113,23],[38,87,140,189,234,271,270,269,268,249,208,163,114,24],[37,86,139,188,233,270,269,268,267,250,209,164,115,25],[36,85,138,187,232,271,270,269,266,251,210,165,116,26],[35,84,137,186,231,270,269,268,265,252,211,166,117,27],[34,83,136,185,230,271,270,269,264,253,212,167,118,28],[33,82,135,184,229,270,269,268,263,254,213,168,119,29],[32,81,134,183,228,271,270,269,262,255,214,169,120,30],[31,80,133,